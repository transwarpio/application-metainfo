---
name: SLIPSTREAM
version: transwarp-6.0
global: false
namePrefix: Slipstream
friendlyName: "Slipstream"
dockerImage: "transwarp/inceptor:transwarp-6.0"
dependencies:
  - name: GUARDIAN
    minVersion: transwarp-6.0
    optional: true
  - name: ZOOKEEPER
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: false
  - name: HDFS
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: false
  - name: YARN
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: false
  - name: HYPERBASE
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: true
  - name: TXSQL
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: false
  - name: INCEPTOR
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: true
    preferred: false
  - name: SLIPSTREAM
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: true
    preferred: false
  - name: SEARCH
    minVersion: transwarp-6.0
    maxVersion: transwarp-6.0
    optional: true
    preferred: true
user: hive
plugins:
  - provider: GUARDIAN
    version: 0.12.0+500.51250
    useTar: false
roles:
- name: INCEPTOR_METASTORE
  friendlyName: "Slipstream Metastore"
  labelPrefix: "inceptor-metastore"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<exec>
      command:
      - /bin/bash
      - -c
      - netstat -an | grep ${service['hive.metastore.port']} | grep LISTEN > /dev/null
  env:
  - name: INCEPTOR_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths: []
  resources:
    limitsMemoryKey: metastore.container.limits.memory
    limitsCpuKey: metastore.container.limits.cpu
    requestsMemoryKey: metastore.container.requests.memory
    requestsCpuKey: metastore.container.requests.cpu
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [2, 1]}
  suggestion:
  - when: !<WhenDependency>
      depType: INCEPTOR_METASTORE
      present: true
    criteria: !<Range> {"max": 0}
  - when: !<WhenDependency>
      depType: INCEPTOR_METASTORE
      present: false
    criteria: !<Range> {"min": 2}
  validation:
  - when: !<WhenDependency>
      depType: INCEPTOR_METASTORE
      present: true
    criteria: !<Range> {"max": 0}
  - when: !<WhenDependency>
      depType: INCEPTOR_METASTORE
      present: false
    criteria: !<Range> {"min": 1}
  operations: []
- name: INCEPTOR_HISTORYSERVER
  friendlyName: "Slipstream History Server"
  labelPrefix: "inceptor-historyserver"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  env:
  - name: INCEPTOR_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths: []
  nodeSpecificMounts:
  - configKey: history.localdir
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [0]}
  suggestion:
  - criteria: !<Range> {"min": 0}
  validation:
  - criteria: !<Range> {"min": 0}
  operations: []
- name: INCEPTOR_SERVER
  friendlyName: "Slipstream Server"
  labelPrefix: "inceptor-server"
  linkExpression: "http://${localhostname}:${service['inceptor.ui.port']}/"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /
      port: ${service['inceptor.ui.port']}
      scheme: HTTP
  env:
  - name: TRANSWARP_ZOOKEEPER_QUORUM
    value: |
      <#assign zookeepers=[]>
      <#if dependencies.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?size gt 0>
        <#list dependencies.ZOOKEEPER.roles.ZOOKEEPER as zookeeper>
          <#assign zookeepers += [zookeeper.hostname]>
        </#list>
      </#if>
      ${zookeepers?join(",")}
  - name: INCEPTOR_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths: []
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/var/lock/subsys/${service.sid}"]
        mode: "755"
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "dataSource.properties"
        targetPath: "/etc/${service.sid}/conf/dataSource.properties"
        mode: "644"

- name: INCEPTOR_EXECUTOR
  friendlyName: "Slipstream Executor"
  labelPrefix: "inceptor-executor"
  category: SLAVE
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  env:
  - name: TRANSWARP_ZOOKEEPER_QUORUM
    value: |
      <#assign zookeepers=[]>
      <#if dependencies.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?? && dependencies.ZOOKEEPER.roles.ZOOKEEPER?size gt 0>
        <#list dependencies.ZOOKEEPER.roles.ZOOKEEPER as zookeeper>
          <#assign zookeepers += [zookeeper.hostname]>
        </#list>
      </#if>
      ${zookeepers?join(",")}
  - name: INCEPTOR_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths:
  - mountPath: /etc/slipstream/keytabs
    hostPath: /etc/slipstream/keytabs
    name: data
  resources:
    limitsMemoryKey: executor.container.limits.memory
    limitsCpuKey: executor.container.limits.cpu
    requestsMemoryKey: executor.container.requests.memory
    requestsCpuKey: executor.container.requests.cpu
  nodeSpecificMounts:
  - configKey: ngmr.localdir
  - configKey: ngmr.fastdisk.dir
  summaryPolicy: SOME
  autoAssign:
  - advice: !<EachNode> {}
  suggestion:
  - criteria: !<EachNode> {}
  validation:
  - criteria: !<Range> {"min": 0}
  operations: []

stages:
  - type: Bootstrap
    taskGroups:
    - !<Create-Dir-in-HDFS>
      summaryPolicy: ALL
      timeoutMinutes: 10
      dirs: ["/${service.sid}"]
      user: "hive"
      group: "hive"
      mod: 711
  - type: Config
    taskGroups:
    - !<Create-Database>
      dbPrefix: metastore
      dbUserConfig: javax.jdo.option.ConnectionUserName
      dbPasswordConfig: javax.jdo.option.ConnectionPassword
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Role>
      roleType: "INCEPTOR_METASTORE"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "INCEPTOR_HISTORYSERVER"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "INCEPTOR_SERVER"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "INCEPTOR_EXECUTOR"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1

firstWizardConfigs:
- hive.server2.enabled
- hive.server2.authentication
- hive.exec.scratchdir
- hive.metastore.warehouse.dir
- ngmr.fastdisk.dir
- ngmr.localdir
- inceptor.ui.port
- hive.server2.thrift.port
- hive.metastore.port
- ngmr.cache.size
- ngmr.fastdisk.size
- javax.jdo.option.ConnectionUserName
- javax.jdo.option.ConnectionPassword
- inceptor.metastore.memory
- inceptor.server.memory
- inceptor.executor.memory
- inceptor.executor.cores
- server.container.limits.memory
- server.container.limits.cpu
- server.container.requests.memory
- server.container.requests.cpu
- server.memory.ratio
- metastore.container.limits.memory
- metastore.container.limits.cpu
- metastore.container.requests.memory
- metastore.container.requests.cpu
- metastore.memory.ratio
- executor.container.limits.memory
- executor.container.limits.cpu
- executor.container.requests.memory
- executor.container.requests.cpu
- executor.memory.ratio
- executor.number.eachnode
- history.localdir
- historyserver.memory.initial.mb
- historyserver.memory.max.mb
- slipstream.historyserver.akka.listen.port
- slipstream.historyserver.restful.listen.port
- rubik.connection.url
- rubik.connection.username
- rubik.connection.password
- rubik.connection.database


pages:
- roles
- configuration
- operation
- resource_allocation
- security
- plugin

principals:
- hive
- HTTP

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<K8sPod> {}
- category: VITAL_SIGN_CHECK
  intervalSeconds: 10
  method: !<Builtin> {}

customConfigFiles:
- hive-site.xml