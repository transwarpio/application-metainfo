#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Default system properties included when running spark-submit.
# This is useful for setting default environmental settings.

# Example:
<#if service['sophon.enable.kerberos'] == 'true'>
spark.yarn.keytab ${service.keytab}
spark.yarn.principal hive/${localhostname?lower_case}@${service.realm}
</#if>
spark.master                                yarn-client

spark.executor.extraJavaOptions             -XX:PermSize=${service['spark.executor.permsize']}m -XX:MaxPermSize=${service['spark.executor.max_permsize']}m -XX:+UseParNewGC -XX:NewRatio=4 -XX:+CMSClassUnloadingEnabled -XX:MinHeapFreeRatio=100 -XX:MaxHeapFreeRatio=100 -XX:CMSMaxAbortablePrecleanTime=1000 -XX:+ExplicitGCInvokesConcurrent -XX:MaxTenuringThreshold=4 -XX:TargetSurvivorRatio=8 -XX:+HeapDumpOnOutOfMemoryError -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -Xms${service['spark.executor.heapsize']}m -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Xloggc:/var/log/${service.sid}/midas-spark-executor.gc.log
spark.driver.extraJavaOptions               -XX:PermSize=${service['spark.driver.permsize']}m -XX:MaxPermSize=${service['spark.driver.max_permsize']}m -XX:+UseParNewGC -XX:NewRatio=4 -XX:+CMSClassUnloadingEnabled -XX:MinHeapFreeRatio=100 -XX:MaxHeapFreeRatio=100 -XX:CMSMaxAbortablePrecleanTime=1000 -XX:+ExplicitGCInvokesConcurrent -XX:MaxTenuringThreshold=4 -XX:TargetSurvivorRatio=8 -XX:+HeapDumpOnOutOfMemoryError -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=70 -Xms${service['spark.driver.heapsize']}m -verbose:gc -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintGCTimeStamps -Xloggc:/var/log/${service.sid}/midas-spark-submit.gc.log
spark.sql.warehouse.dir                     ${service['spark.sql.warehouse.dir']}

spark.yarn.queue                            ${service['spark.yarn.queue']}
spark.yarn.appMasterEnv.JAVA_HOME           /usr/java/jdk1.8.0_25
spark.executorEnv.JAVA_HOME                 /usr/java/jdk1.8.0_25
spark.yarn.dist.archives                    ${service['spark.yarn.dist.archives']}

# spark.dynamicAllocation.enabled             true
# spark.shuffle.service.enabled               true
# spark.dynamicAllocation.executorIdleTimeout 720s
# spark.dynamicAllocation.initialExecutors    4
# spark.dynamicAllocation.maxExecutors        16

# spark.eventLog.enabled           true
# spark.eventLog.dir               hdfs://namenode:8021/directory
# spark.serializer                 org.apache.spark.serializer.KryoSerializer

# custom configurations
<#if service['spark-defaults.conf']??>
<#list service['spark-defaults.conf'] as key, value>
${key}                                      ${value}
</#list>
</#if>

