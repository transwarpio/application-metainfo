---
name: SOPHON
version: sophon-2.2.1-rc1
global: false
namePrefix: Sophon
friendlyName: "Sophon"
dependencies:
  - name: GUARDIAN
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: true
  - name: ZOOKEEPER
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: true
  - name: INCEPTOR
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: true
  - name: HDFS
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: false
  - name: YARN
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: false
  - name: TXSQL
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: false
  - name: WORKFLOW
    minVersion: sophon-2.2.0-final
    maxVersion: sophon-2.2.1-final
    optional: true
  - name: KONG
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: true
  - name: HYPERBASE
    minVersion: transwarp-6.0.2-final
    maxVersion: transwarp-6.0.2-final
    optional: true

roles:
- name: SHARE_SERVER
  dockerImage: "transwarp/share-server:sophon-2.2.1-rc1"
  friendlyName: "Share Server"
  labelPrefix: "share-server"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env: 
  - name: SOPHON_CONF_DIR
    value: /etc/${service.sid}/conf/share/
  - name: SOPHON_SERVICE_ID
    value: ${service.sid}
  mountPaths: []
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1, "max": 1}
  operations:
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "share/share.conf"
        targetPath: "/etc/${service.sid}/conf/share/share.conf"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "share/application.properties"
        targetPath: "/etc/${service.sid}/conf/share/application.properties"
        mode: "755"

- name: SOPHON_PYTHON_REPO
  dockerImage: "transwarp/sophon-python-repo:sophon-2.2.1-rc1"
  linkExpression: "http://${localhostname}:8036"
  friendlyName: "Sophon python repo"
  labelPrefix: "sophon-python-repo"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env: []
  mountPaths:
  - mountPath: /usr/libs/pypi
    hostPath: /var/${service.sid}/pypi-server
    name: pypi-dir
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 0}
  validation:
  - criteria: !<Range> {"min": 0, "max": 1}
  operations: []

- name: SOPHON_R_REPO
  dockerImage: "transwarp/sophon-r-repo:sophon-2.2.1-rc1"
  linkExpression: "ftp://${localhostname}:8037/rlibs/src/contrib/"
  friendlyName: "Sophon R Repo"
  labelPrefix: "sophon-r-repo"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env: []
  mountPaths:
  - mountPath: /var/ftp/pub/rlibs/src/contrib
    hostPath: /var/${service.sid}/r-repo-server
    name: r-repo
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 0}
  validation:
  - criteria: !<Range> {"min": 0, "max": 1}
  operations: []

- name: SOPHON_WEB_UI
  linkExpression: "http://${localhostname}:${service['sophon.ui.port']}/"
  dockerImage: "transwarp/sophon-web-ui:sophon-2.2.1-rc1"
  friendlyName: "Sophon Web UI"
  labelPrefix: "sophon-web-ui"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env:
  - name: SOPHON_CONF_DIR
    value: /etc/${service.sid}/conf
  - name: SOPHON_SERVICE_ID
    value: ${service.sid}
  mountPaths: []
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1, "max": 1}
  operations:
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "default"
        targetPath: "/etc/${service.sid}/conf/default"
        mode: "755"

- name: SOPHON_REDIS
  dockerImage: "transwarp/sophon-redis:sophon-2.2.1-rc1"
  friendlyName: "Redis Server"
  labelPrefix: "sophon-redis"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env:
  - name: REDIS_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths:
  - mountPath: /data
    hostPath: /var/${service.sid}/redis
    name: redisdir
  resources:
    limitsMemoryKey: redis.container.limits.memory
    limitsCpuKey: redis.container.limits.cpu
    requestsMemoryKey: redis.container.requests.memory
    requestsCpuKey: redis.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1, "max": 1}
  operations: []

- name: SOPHON_WEB
  dockerImage: "transwarp/sophon-web:sophon-2.2.1-rc1"
  friendlyName: "Sophon base"
  labelPrefix: "sophon-base"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env:
  - name: KRB_ENABLE
    value: <#if service.auth == "kerberos">true<#else>false</#if>
  - name: SOPHON_CONF_DIR
    value: /etc/${service.sid}/conf
  - name: SOPHON_SERVICE_ID
    value: ${service.sid}
  mountPaths:
  - mountPath: /home/root/sophon
    hostPath: /var/${service.sid}
    name: flowdir
  - mountPath: /srv/kubernetes
    hostPath: /srv/kubernetes
    name: secure
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1, "max": 1}
  operations:
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "sophon.conf"
        targetPath: "/etc/${service.sid}/conf/sophon.conf"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "env.sh"
        targetPath: "/etc/${service.sid}/conf/env.sh"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "log4j.properties"
        targetPath: "/etc/${service.sid}/conf/log4j.properties"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "application.properties"
        targetPath: "/etc/${service.sid}/conf/application.properties"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "spark-defaults.conf"
        targetPath: "/etc/${service.sid}/conf/spark-defaults.conf"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "jupyter_notebook_config.py"
        targetPath: "/etc/${service.sid}/conf/jupyter_notebook_config.py"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "scheduler.xml"
        targetPath: "/etc/${service.sid}/conf/scheduler.xml"
        mode: "755"

stages:
  - type: Config
    taskGroups:
    - !<Create-Database>
      dbPrefix: metastore
      dbUserConfig: livy.jdbc.username
      dbPasswordConfig: livy.jdbc.password
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Create-Database>
      dbPrefix: metastore_share
      dbUserConfig: livy.jdbc.username
      dbPasswordConfig: livy.jdbc.password
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Role>
      roleType: "SOPHON_WEB"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "SOPHON_WEB_UI"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "SHARE_SERVER"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Role>
      roleType: "SOPHON_REDIS"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
    - !<Resource-on-Manager>
      summaryPolicy: ALL
      timeoutMinutes: 2
      templateType: FreeMarker
      templateFile: "rbac/role.yaml"
    - !<Resource-on-Manager>
      summaryPolicy: ALL
      timeoutMinutes: 2
      templateType: FreeMarker
      templateFile: "rbac/rolebinding.yaml"
    - !<Resource-on-Manager>
      summaryPolicy: ALL
      timeoutMinutes: 2
      templateType: FreeMarker
      templateFile: "rbac/serviceaccount.yaml"



firstWizardConfigs:
- sophon.resource.type
- sophon.enable.kerberos
- spark.executor.heapsize
- spark.executor.permsize
- spark.executor.max_permsize
- spark.driver.heapsize
- spark.driver.permsize
- spark.driver.max_permsize
- server.container.limits.memory
- server.container.limits.cpu
- server.container.requests.memory
- server.container.requests.cpu
- server.memory.ratio
- redis.container.limits.memory
- redis.container.limits.cpu
- redis.container.requests.memory
- redis.container.requests.cpu

product: Sophon

principals:
- hive

pages:
- roles
- configuration
- operation
- security

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 30
  method: !<K8sPod> {}
