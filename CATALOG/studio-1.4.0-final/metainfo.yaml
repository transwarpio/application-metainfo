---
name: CATALOG
version: studio-1.4.0-final
global: false
namePrefix: Catalog
friendlyName: Catalog
dependencies:
  - name: HYPERBASE
    minVersion: transwarp-6.0
    optional: false
  - name: SEARCH
    minVersion: transwarp-6.0
    optional: false
  - name: KAFKA
    minVersion: transwarp-6.0
    optional: false
  - name: ZOOKEEPER
    minVersion: transwarp-6.0
    optional: false
  - name: HDFS
    minVersion: transwarp-6.0
    optional: false
  - name: TXSQL
    minVersion: transwarp-6.0
    optional: false
user: catalog

roles:
- name: CATALOG_WEB
  friendlyName: "Catalog Web"
  labelPrefix: "catalog-web"
  dockerImage: "transwarp/catalog-web:studio-1.4.0-final"
  linkExpression: "https://${localhostname}:${service['catalog.web.http.port']}"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /catalog/api/v1/system/health
      port: ${service['catalog.web.http.port']}
      scheme: HTTPS
  env:
  - name: CATALOG_CONF_DIR
    value: /etc/${service.sid}/conf
  - name: KRB_ENABLE
    value: <#if service.auth = "kerberos">true<#else>false</#if>
  mountPaths:
  - mountPath: /var/log/catalog-web
    hostPath: /var/log/${service.sid}/catalog-web
    name: catalog-web-log
  resources:
    limitsMemoryKey: catalog.web.limits.memory
    limitsCpuKey: catalog.web.limits.cpu
    requestsMemoryKey: catalog.web.requests.memory
    requestsCpuKey: catalog.web.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Config
    directives:
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/hdfs-site.xml"
        to: "/etc/${service.sid}/conf/hdfs-site.xml"
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/core-site.xml"
        to: "/etc/${service.sid}/conf/core-site.xml"
- name: CATALOG_PLATFORM
  friendlyName: "Catalog Platform"
  labelPrefix: "catalog-platform"
  dockerImage: "transwarp/catalog-platform:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /api/atlas/healthCheck
      port: ${service['catalog.platform.http.port']}
      scheme: HTTPS
  env:
  - name: CATALOG_CONF_DIR
    value: /etc/${service.sid}/conf
  - name: KRB_ENABLE
    value: <#if service.auth = "kerberos">true<#else>false</#if>
  - name: WEB_SERVER_ADDRESS
    value: https://${service.roles["CATALOG_WEB"][0].hostname}:${service['catalog.web.http.port']}
  mountPaths:
  - mountPath: /var/log/catalog-platform
    hostPath: /var/log/${service.sid}/catalog-platform
    name: catalog-platform-log
  resources:
    limitsMemoryKey: catalog.platform.limits.memory
    limitsCpuKey: catalog.platform.limits.cpu
    requestsMemoryKey: catalog.platform.requests.memory
    requestsCpuKey: catalog.platform.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Config
    directives: 
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HYPERBASE.sid}/conf/hbase-site.xml"
        to: "/etc/${service.sid}/conf/hbase-site.xml"
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/hdfs-site.xml"
        to: "/etc/${service.sid}/conf/hdfs-site.xml"
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/core-site.xml"
        to: "/etc/${service.sid}/conf/core-site.xml"
- name: CATALOG_AGENT
  friendlyName: "Catalog Agent"
  labelPrefix: "catalog-agent"
  dockerImage: "transwarp/catalog-agent:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /agent/api/v1/health
      port: ${service['catalog.agent.http.port']}
      scheme: HTTPS
  env:
    - name: CATALOG_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: KRB_ENABLE
      value: <#if service.auth = "kerberos">true<#else>false</#if>
  mountPaths:
    - mountPath: /var/log/catalog-agent
      hostPath: /var/log/${service.sid}/catalog-agent
      name: catalog-agent-log
  resources:
    limitsMemoryKey: catalog.agent.limits.memory
    limitsCpuKey: catalog.agent.limits.cpu
    requestsMemoryKey: catalog.agent.requests.memory
    requestsCpuKey: catalog.agent.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations: []
- name: CATALOG_DIOCLES
  friendlyName: "Catalog Diocles"
  labelPrefix: "catalog-diocles"
  dockerImage: "transwarp/diocles:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  deleteOpCleanDirs:
    fromConfig:
      - key: catalog.diocles.data.dir
        featureFile: in_use.lock
  readinessProbe:
    probe: !<httpGet>
      path: /api/v1/health
      port: ${service['catalog.diocles.http.port']}
      scheme: HTTP
  env:
    - name: CATALOG_CONF_DIR
      value: /etc/${service.sid}/conf
  mountPaths:
    - mountPath: /var/log/catalog-diocles
      hostPath: /var/log/${service.sid}/catalog-diocles
      name: catalog-diocles-log
  resources:
    limitsMemoryKey: catalog.diocles.limits.memory
    limitsCpuKey: catalog.diocles.limits.cpu
    requestsMemoryKey: catalog.diocles.requests.memory
    requestsCpuKey: catalog.diocles.requests.cpu
  nodeSpecificMounts:
    - configKey: catalog.diocles.data.dir
  summaryPolicy: ALL
  autoAssign:
    - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
    - criteria: !<Range> {"min": 1}
  validation:
    - criteria: !<Range> {"min": 1}
  operations:
    - type: Config
      directives:
      - directive: !<resource>
          templateType: FreeMarker
          templatePath: "diocles-application.yml"
          targetPath: "/etc/${service.sid}/conf/diocles-application.yml"
          mode: "644"
- name: BAYMAX_EXECUTOR
  friendlyName: "Baymax Executor"
  labelPrefix: "baymax-executor"
  dockerImage: "transwarp/baymax-executor:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /
      port: ${service['baymax.executor.http.port']}
      scheme: HTTP
  env:
    - name: BAYMAX_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: KRB_ENABLE
      value: <#if service.auth = "kerberos">true<#else>false</#if>
  mountPaths: []
  resources:
    limitsMemoryKey: baymax.executor.limits.memory
    limitsCpuKey: baymax.executor.limits.cpu
    requestsMemoryKey: baymax.executor.requests.memory
    requestsCpuKey: baymax.executor.requests.cpu
  summaryPolicy: ALL
  autoAssign:
    - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
    - criteria: !<Range> {"min": 1}
  validation:
    - criteria: !<Range> {"min": 1}
  operations: []
- name: BAYMAX_ENGINE
  friendlyName: "Baymax Engine"
  labelPrefix: "baymax-engine"
  dockerImage: "transwarp/baymax-engine:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /baymax/api/v1/system/health
      port: ${service['baymax.engine.http.port']}
      scheme: HTTP
  env:
    - name: BAYMAX_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: KRB_ENABLE
      value: <#if service.auth = "kerberos">true<#else>false</#if>
    - name: EXECUTOR_SERVER_ADDRESS
      value: http://${service.roles["BAYMAX_EXECUTOR"][0].hostname}:${service['baymax.executor.http.port']}
  mountPaths: []
  resources:
    limitsMemoryKey: baymax.engine.limits.memory
    limitsCpuKey: baymax.engine.limits.cpu
    requestsMemoryKey: baymax.engine.requests.memory
    requestsCpuKey: baymax.engine.requests.cpu
  summaryPolicy: ALL
  autoAssign:
    - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
    - criteria: !<Range> {"min": 1}
  validation:
    - criteria: !<Range> {"min": 1}
  operations: []
- name: BAYMAX_WEB
  friendlyName: "Baymax Web"
  labelPrefix: "baymax-web"
  dockerImage: "transwarp/baymax-web:studio-1.4.0-final"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  readinessProbe:
    probe: !<httpGet>
      path: /baymax/api/v1/system/health
      port: ${service['baymax.web.http.port']}
      scheme: HTTPS
  env:
    - name: BAYMAX_CONF_DIR
      value: /etc/${service.sid}/conf
    - name: KRB_ENABLE
      value: <#if service.auth = "kerberos">true<#else>false</#if>
    - name: ENGINE_SERVER_ADDRESS
      value: http://${service.roles["BAYMAX_ENGINE"][0].hostname}:${service['baymax.engine.http.port']}
    - name: CATALOG_WEB_SERVER_ADDRESS
      value: https://${service.roles["CATALOG_WEB"][0].hostname}:${service['catalog.web.http.port']}
  mountPaths: []
  resources:
    limitsMemoryKey: baymax.web.limits.memory
    limitsCpuKey: baymax.web.limits.cpu
    requestsMemoryKey: baymax.web.requests.memory
    requestsCpuKey: baymax.web.requests.cpu
  summaryPolicy: ALL
  autoAssign:
    - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
    - criteria: !<Range> {"min": 1}
  validation:
    - criteria: !<Range> {"min": 1}
  operations: []
stages:
  - type: Config
    taskGroups:
    - !<Create-Database>
      dbPrefix: catalog
      dbUserConfig: javax.jdo.option.ConnectionUserName
      dbPasswordConfig: javax.jdo.option.ConnectionPassword
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Create-Database>
      dbPrefix: bm
      dbUserConfig: javax.jdo.option.ConnectionUserName
      dbPasswordConfig: javax.jdo.option.ConnectionPassword
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Create-Database>
      dbPrefix: diocles
      dbUserConfig: javax.jdo.option.ConnectionUserName
      dbPasswordConfig: javax.jdo.option.ConnectionPassword
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Role>
      roleType: "CATALOG_WEB"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "CATALOG_PLATFORM"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "CATALOG_AGENT"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "CATALOG_DIOCLES"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "BAYMAX_EXECUTOR"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "BAYMAX_ENGINE"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
    - !<Role>
      roleType: "BAYMAX_WEB"
      operation: Config
      summaryPolicy: ALL
      timeoutMinutes: 1
  - type: PreUpgrade
    taskGroups:
    - !<DockerRunPreUpgrade>
      summaryPolicy: ALL
      timeoutMinutes: 10
      roleType: CATALOG_WEB
      node: Any
  - type: PreDeleteAfterStop
    taskGroups:
    - !<DockerRunPreDelete>
      summaryPolicy: NONE
      timeoutMinutes: 10
      roleType: CATALOG_PLATFORM
      node: Any

firstWizardConfigs:
- catalog.web.http.port
- catalog.platform.http.port
- catalog.agent.http.port
- cas.enable
- catalog.es.username
- catalog.es.password
- kafka.topic.catalog.hook 
- kafka.topic.catalog.entities
- catalog.graph.table
- javax.jdo.option.ConnectionUserName
- javax.jdo.option.ConnectionPassword
- default.tenant
- catalog.web.limits.memory
- catalog.web.limits.cpu
- catalog.web.requests.memory
- catalog.web.requests.cpu
- catalog.platform.limits.memory
- catalog.platform.limits.cpu
- catalog.platform.requests.memory
- catalog.platform.requests.cpu
- catalog.web.memory.ratio
- catalog.platform.memory.ratio
- catalog.diocles.limits.memory
- catalog.diocles.limits.cpu
- catalog.diocles.requests.memory
- catalog.diocles.requests.cpu
- catalog.diocles.data.dir
- baymax.executor.http.port
- baymax.engine.http.port
- baymax.web.http.port
- baymax.executor.limits.memory
- baymax.executor.limits.cpu
- baymax.executor.requests.memory
- baymax.executor.requests.cpu
- baymax.executor.memory.ratio
- baymax.engine.limits.memory
- baymax.engine.limits.cpu
- baymax.engine.requests.memory
- baymax.engine.requests.cpu
- baymax.engine.memory.ratio
- baymax.web.limits.memory
- baymax.web.limits.cpu
- baymax.web.requests.memory
- baymax.web.requests.cpu
- baymax.web.memory.ratio

pages:
- summary
- roles
- configuration
- operation
- security

principals:
- hive
- kafka
- hdfs
- hbase
- zookeeper

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<K8sPod> {}
