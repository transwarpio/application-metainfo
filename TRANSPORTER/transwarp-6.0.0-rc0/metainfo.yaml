---
name: TRANSPORTER
version: transwarp-6.0.0-rc0
global: false
namePrefix: Transporter
friendlyName: Transwarp Data Transporter
dockerImage: "transwarp/tdt:transwarp-6.0.0-rc0"
dependencies:
  - name: GUARDIAN
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: true
  - name: HDFS
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: false
  - name: INCEPTOR
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: false
  - name: TXSQL
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: false
  - name: ZOOKEEPER
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: true
  - name: KAFKA
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: true
  - name: HYPERBASE
    minVersion: transwarp-6.0.0-rc0
    maxVersion: transwarp-6.0.0-rc0
    optional: true
roles:
- name: TDT_SERVER
  friendlyName: "Transporter Server"
  labelPrefix: "transporter-server"
  linkExpression: "http://${localhostname}:${service['tdt.server.port']}"
  category: MASTER
  frontendOperations: ["Start", "Stop", "Delete", "Scaleout"]
  deleteOpCondition:
    deletable:
      number: 2
    reject:
      number: 1
  env:
  - name: TDT_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths: []
  resources:
    limitsMemoryKey: tdt.container.limits.memory
    limitsCpuKey: tdt.container.limits.cpu
    requestsMemoryKey: tdt.container.requests.memory
    requestsCpuKey: tdt.container.requests.cpu
  summaryPolicy: ALL
  autoAssign:
  - advice: !<NumSeq> {"numSeq": [1]}
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/etc/${service.sid}/conf/hadoop"]
        mode: "755"
    - directive: !<mkdirs>
        paths: ["/etc/${service.sid}/conf/canal/conf/spring"]
        mode: "755"
  - type: Config
    directives:
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/hdfs-site.xml"
        to: "/etc/${service.sid}/conf/hadoop/hdfs-site.xml"
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HDFS.sid}/conf/core-site.xml"
        to: "/etc/${service.sid}/conf/hadoop/core-site.xml"
    - directive: !<link>
            action: Link
            from: "/etc/${dependencies.KAFKA.sid}/conf/jaas.conf"
            to: "/etc/${service.sid}/conf/jaas.conf"
    - directive: !<link>
        action: Link
        from: "/etc/${dependencies.HYPERBASE.sid}/conf/hbase-site.xml"
        to: "/etc/${service.sid}/conf/hadoop/hbase-site.xml"
      necessary: false
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "db.properties"
        targetPath: "/etc/${service.sid}/conf/db.properties"
        mode: "600"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "canal/conf/canal.properties.ftl"
        targetPath: "/etc/${service.sid}/conf/canal/conf/canal.properties"
        mode: "600"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "canal/conf/spring/default-instance.xml.ftl"
        targetPath: "/etc/${service.sid}/conf/canal/conf/spring/default-instance.xml"
        mode: "600"
stages:
  - type: Config
    taskGroups:
    - !<Create-Database>
      dbPrefix: tdt
      dbUserConfig: tdt.persistence.user.name
      dbPasswordConfig: tdt.persistence.password
      timeoutMinutes: 5
      summaryPolicy: SOME
    - !<Role>
      roleType: "TDT_SERVER"
      operation: Config
      summaryPolicy: SOME
      timeoutMinutes: 1
  - type: PreUpgrade
    taskGroups:
    - !<DockerRunPreUpgrade>
      summaryPolicy: ALL
      timeoutMinutes: 10
      roleType: TDT_SERVER
      node: Any
  - type: PreRollback
    taskGroups:
    - !<DockerRunPreRollback>
      summaryPolicy: ALL
      timeoutMinutes: 10
      roleType: TDT_SERVER
      node: Any


firstWizardConfigs:
- tdt.server.port
- tdt.persistence.user.name
- tdt.persistence.password
- tdt.inceptor.ldap.username
- tdt.inceptor.ldap.password
- tdt.task.live.time
- tdt.task.scavenger.check.period
- tdt.task.max.accept.size
- tdt.task.max.concurrent.size
- tdt.thread.max.concurrent.size
- tdt.container.limits.memory
- tdt.container.limits.cpu
- tdt.container.requests.memory
- tdt.container.requests.cpu
- tdt.memory.ratio
- tdt.kafka.bootstrap.servers

principals:
- tdt
- hive

pages:
- roles
- configuration
- operation
- security

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 10
  method: !<K8sPod> {}

customConfigFiles:
- tdt-site.xml