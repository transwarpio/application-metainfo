<#assign mysqlHostPorts = []/>
<#list dependencies.TXSQL.roles['TXSQL_SERVER'] as role>
    <#assign mysqlHostPorts = mysqlHostPorts + [role.hostname + ':' + dependencies.TXSQL['mysql.rw.port']]>
</#list>
<#assign mysqlHostPort = mysqlHostPorts?join(",")>

# database settings
# prod
spring.datasource.url=jdbc:mysql://${mysqlHostPort}/mirror_${service.sid}?allowMultiQueries=true&useLegacyDatetimeCode=false&serverTimezone=Asia/Shanghai&useSSL=false
spring.datasource.username=${service['javax.jdo.option.ConnectionUserName']}
spring.datasource.password=${service['javax.jdo.option.ConnectionPassword']}
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.schema=classpath:/schema/mirror-userprofile-schema-1.0.0-mysql.sql
spring.datasource.initialize=true

# dev/QA with initalization
#spring.datasource.driver=org.h2.Driver
#spring.datasource.url=
#spring.datasource.username=userprofiletest
#spring.datasource.password=123456
#spring.datasource.schema=classpath:/schema/mirror-userprofile-schema-1.0.0-mysql.sql
#spring.datasource.initialize=true

# mybatis settings
mybatis.mapperLocations = classpath:/config/mapper/*.xml
mybatis.type-aliases-package = io.transwarp.mirror.persistence.mybatis.model

# REDIS (RedisProperties)
spring.redis.database=0
spring.redis.host=${dependencies.SOPHON.roles.SOPHON_REDIS[0]['hostname']}
spring.redis.password=
spring.redis.port=${dependencies.SOPHON['redis.port']}
spring.redis.pool.max-idle=8
spring.redis.pool.min-idle=0
spring.redis.pool.max-active=8
spring.redis.pool.max-wait=-1
spring.redis.timeout=5000
spring.redis.expiration=1800
# spring.redis.sentinel.master= # name of Redis server
# spring.redis.sentinel.nodes= # comma-separated list of host:port pairs

## EMAIL SETUP
spring.mail.host=smtp-mail.outlook.com
spring.mail.port=587
spring.mail.username=transwarp.mirror@outlook.com
spring.mail.password=discover123
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.stattls.required=true

#
# tag scheduler cron expression
tag.scheduler.cron=0 0 3 * * ?
