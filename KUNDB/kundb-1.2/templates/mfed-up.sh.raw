#!/bin/bash

# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is an example script that creates a single shard vttablet deployment.

set -x

echo "---------------mfed-up start-----------"
# MFED_MY_CNF controls whether we need to load mfed configuration for mysql.
export MFED_MY_CNF=true

if [ -f "$KUNDB_CONF_DIR/role_conf.sh" ]; then
  source $KUNDB_CONF_DIR/role_conf.sh mfed 
  source $KUNDB_CONF_DIR/get_dir.sh $VIR_DATA_DIR 
else
   echo "/etc/kundb1/conf/ is not exist cant start kundb"
   exit 1
fi

if [ "$MFED_DATA_DIR" != "/vdir" ]; then
export VTDATAROOT=$MFED_DATA_DIR
fi

if [ ! -d "$VTDATAROOT/tmp/priv" ]; then
   mkdir -p $VTDATAROOT/tmp/priv
fi
if [ ! -d "$VTDATAROOT/_kundb" ]; then
   mkdir -p $VTDATAROOT/_kundb
fi
export VT_MYSQL_ROOT=${MYSQL_ROOT:-'/usr/local/mariadb'}

cell=${CELLNAME:-'transwarp'}
keyspace=${KEYSPACE:-'_mfed'}
shard=$SHARD
uid_base=$SHARD_UIDBASE
uid_index=$UIDINDEX
web_port=$PRIV_KUNGATE_WEB_PORT
kungate_grpc_port=$PRIV_KUNGATE_GRPC_PORT
mysql_server_port=$PRIV_KUNGATE_SERVER_PORT
port_base=$[$PORT_BASE + $uid_base]
grpc_port_base=$[$GRPC_PORT_BASE + $uid_base]
mysql_port_base=$[$MYSQL_PORT_BASE + $uid_base]
tablet_hostname=`hostname -f`
TabletsDataDirs=$VTDATAROOT
default_dbname=${DEFAULT_DBNAME:-'$keyspace'}
uid=$[$uid_base + $uid_index]
vtgate_port=$PRIV_KUNGATE_SERVER_PORT
audit_filter=$PRIV_KUNGATE_AUDIT_FILTER
always_set_user=$ALWAYS_SET_USER
optional_args=$PRIV_KUNGATE_OPTIONAL_ARGS 
enable_security=$ENABLE_SECURITY
if [ $enable_security == 'true' ]; then
access_control=true
else
access_control=false
fi
server_impl=static
auth_plugin=static

dbconfig_dba_flags="\
    -db-config-dba-uname vt_app\
    -db-config-dba-charset utf8"
dbconfig_flags="$dbconfig_dba_flags \
    -db-config-app-uname vt_app \
    -db-config-app-dbname $default_dbname\
    -db-config-app-charset utf8 \
    -db-config-appdebug-uname vt_appdebug \
    -db-config-appdebug-dbname $default_dbname\
    -db-config-appdebug-charset utf8 \
    -db-config-allprivs-uname vt_allprivs \
    -db-config-allprivs-dbname $default_dbname\
    -db-config-allprivs-charset utf8 \
    -db-config-repl-uname vt_repl \
    -db-config-repl-dbname $default_dbname\
    -db-config-repl-charset utf8 \
    -db-config-filtered-uname vt_filtered \
    -db-config-filtered-dbname $default_dbname\
    -db-config-filtered-charset utf8 \
    -queryserver-config-max-result-size 1000000 \
    -queryserver-config-query-cache-size 1000 \
    -queryserver-config-query-timeout 100 \
    -queryserver-config-max-dml-rows 300000 \
    -queryserver-config-pool-size 100 \
    -queryserver-config-transaction-cap 300 \
    -queryserver-config-transaction-timeout 90"
init_db_sql_file="$VTROOT/config/init_db.sql"

case "$MYSQL_FLAVOR" in
  "MySQL56")
    export EXTRA_MY_CNF=$VTROOT/config/mycnf/master_mysql56.cnf
    ;;
  "MariaDB")
    export EXTRA_MY_CNF=$VTROOT/config/mycnf/master_mariadb.cnf
    ;;
  *)
    echo "Please set MYSQL_FLAVOR to MySQL56 or MariaDB."
    exit 1
    ;;
esac

if [ ! -d "$VTDATAROOT/$tablet_dir/tmp" ]; then
   mkdir -p $VTDATAROOT/$tablet_dir/tmp
fi

# Start all mysqlds in background.
uid=$[$uid_base + $uid_index]
mysql_port=$[$mysql_port_base + $uid_index] 
printf -v alias '%s-%010d' $cell $uid
printf -v tablet_dir 'vt_%010d' $uid

echo "Starting MySQL for tablet $alias..."
action="init -init_db_sql_file $init_db_sql_file"
if [ -d $VTDATAROOT/$tablet_dir ]; then
  echo "Resuming from existing kuntablet dir:"
  echo "    $VTDATAROOT/$tablet_dir"
  $KUNDB_CONF_DIR/my_cnf_update.sh $VTDATAROOT/$tablet_dir/my.cnf $KUNDB_CONF_DIR/mfed.cfg
  action='start'
fi
$VTROOT/bin/mysqlctl \
  -log_dir $VTDATAROOT/$tablet_dir/tmp \
  -tablet_uid $uid \
  $dbconfig_dba_flags \
  -mysql_port $mysql_port \
  $action &

wait

echo $MYSQL_PORT_BASE 
echo $SHARD_UIDBASE
mysql_port_base=$[$MYSQL_PORT_BASE + $SHARD_UIDBASE]
mysql_port=$[$mysql_port_base+ $UIDINDEX]
echo "mysql_port: $mysql_port"
count=0

mysql --socket=$VTDATAROOT/$tablet_dir/mysql.sock -uroot -e "select 1"
while [ $? -ne 0 ]
do
    echo " wait mysql starting..."
    sleep 4	
    count=$((count+1))
    if [ $count -eq 5 ]; then
      echo "mysql connetcion reach the maximum times exit"
      break
    fi
    mysql --socket=$VTDATAROOT/$tablet_dir/mysql.sock -uroot -e "select 1"
done

# Start all vttablets in background.
uid=$[$uid_base + $uid_index]
port=$PORT
grpc_port=$[$grpc_port_base + $uid_index]
printf -v alias '%s-%010d' $cell $uid
printf -v tablet_dir 'vt_%010d' $uid
tablet_type=replica
if [[ $uid_index -gt 2 ]]; then
  tablet_type=rdonly
fi

if [ ! -d "$VTDATAROOT/backups" ]; then
  mkdir -p $VTDATAROOT/backups
fi

echo "Starting vttablet for $alias..."
$VTROOT/bin/vttablet \
  $TOPOLOGY_FLAGS \
  -log_dir $TabletsDataDirs/$tablet_dir/tmp \
  -tablet-path $alias \
  -tablet_hostname "$tablet_hostname" \
  -init_keyspace $keyspace \
  -init_shard $shard \
  -enable-autocommit \
  -init_tablet_type $tablet_type \
  -health_check_interval 5s \
  -backup_storage_implementation file \
  -file_backup_storage_root $TabletsDataDirs/backups \
  -restore_from_backup \
  -port $port \
  -always_set_effective_user=$always_set_user \
  -grpc_port $grpc_port \
  -grpc_max_message_size 1073741824 \
  -queryserver-config-schema-reload-time 1800 \
  -enable_access_control=$access_control \
  -binlog_use_v3_resharding_mode=true \
  -service_map 'grpc-queryservice,grpc-tabletmanager,grpc-updatestream' \
  -pid_file $TabletsDataDirs/$tablet_dir/vttablet.pid \
  -vtctld_addr http://$tablet_hostname:$vtctld_web_port/ \
  $dbconfig_flags \
  > $TabletsDataDirs/$tablet_dir/vttablet.out 2>&1 &

echo "Access tablet $alias at http://$tablet_hostname:$port/debug/status"
sleep 4

cd $KUNHOME && ./kunctl.sh ListAllTablets $CELLNAME | grep -q $alias
until [ $? -eq 0 ]
do
    sleep 2
    cd $KUNHOME && ./kunctl.sh ListAllTablets $CELLNAME | grep -q $alias
done
echo "InitMfed $alias ... "
source $KUNDB_CONF_DIR/sup_user_info.sh 
inNum=0
cd $KUNHOME && timeout 10 ./kunctl.sh InitMfed -mfed_alias $alias -vtgate_user $SUPUSER -vtgate_password $PASSWORD -vtgate_host `hostname -f` -vtgate_port $vtgate_port 
while [ $? -ne 0 ]
do
    sleep 3 
    inNum=$((inNum+1))
    if [ $inNum -eq 4 ]; then
       echo "Mfed InitMfed reach the maximum times"
       break
    fi
    cd $KUNHOME && timeout 10 ./kunctl.sh InitMfed -mfed_alias $alias -vtgate_user $SUPUSER -vtgate_password $PASSWORD -vtgate_host `hostname -f` -vtgate_port $vtgate_port 
done
sleep 2
    
if [ ! -f "$VTDATAROOT/$tablet_dir/_init_mfed_master" ]; then
   count=0
   cd $KUNHOME && ./kunctl.sh ListAllTablets $CELLNAME | grep $alias| grep -q master
   while [ $? -ne 0 ]
   do
       echo "Mfed InitShardMaster ..."
       cd $KUNHOME && timeout 100 ./kunctl.sh InitShardMaster -force $KEYSPACE/$SHARD $alias 
       echo "------InitShardMaster over ------ "
       sleep 4	
       count=$((count+1))

       if [ $count -eq 5 ]; then
          echo "Mfed InitShardMaster reach the maximum times"
          break
       fi

       cd $KUNHOME && ./kunctl.sh ListAllTablets $CELLNAME | grep $alias| grep -q master 
   done

      cd $VTDATAROOT/$tablet_dir && touch  _init_mfed_master
   else
      echo "Resuming COMPUTE_NODE..."
fi

# ---start priv-vtgate
optional_tls_args=''
if [ "$1" = "--enable-tls" ];
then
	echo "Enabling TLS with client authentication"
	config_dir=../../java/grpc-client/src/test/resources
	cert_dir=$VTDATAROOT/tls
	rm -Rf $cert_dir
	mkdir -p $cert_dir

    # Create CA
    openssl genrsa -out $cert_dir/ca-key.pem
    openssl req -new -x509 -nodes -days 3600 -batch -config $config_dir/ca.config -key $cert_dir/ca-key.pem -out $cert_dir/ca-cert.pem

    # Create server-side signed cert
    openssl req -newkey rsa:2048 -days 3600 -nodes -batch -config $config_dir/cert.config -keyout $cert_dir/server-key.pem -out $cert_dir/server-req.pem
    openssl x509 -req -in $cert_dir/server-req.pem -days 3600 -CA $cert_dir/ca-cert.pem -CAkey $cert_dir/ca-key.pem -set_serial 01 -out $cert_dir/server-cert.pem

    # Create client-side signed cert
    openssl req -newkey rsa:2048 -days 3600 -nodes -batch -config $config_dir/cert.config -keyout $cert_dir/client-key.pem -out $cert_dir/client-req.pem
    openssl x509 -req -in $cert_dir/client-req.pem -days 3600 -CA $cert_dir/ca-cert.pem -CAkey $cert_dir/ca-key.pem -set_serial 02 -out $cert_dir/client-cert.pem

    optional_tls_args="-grpc_cert $cert_dir/server-cert.pem -grpc_key $cert_dir/server-key.pem -grpc_ca $cert_dir/ca-cert.pem"
fi

# Start vtgate.
$VTROOT/bin/vtgate \
  $TOPOLOGY_FLAGS \
  -log_dir $VTDATAROOT/tmp/priv \
  -port $web_port \
  -grpc_max_message_size 1073741824 \
  -grpc_client_max_recv_message_size 1073741824 \
  -grpc_port $kungate_grpc_port\
  -mysql_server_port $mysql_server_port \
  -audit_sqls 0 \
  -cell $cell \
  -cells_to_watch $cell \
  -tablet_types_to_wait MASTER,REPLICA \
  -gateway_implementation discoverygateway \
  -audit_filter="$audit_filter" \
  -service_map 'grpc-vtgateservice' \
  -pid_file $VTDATAROOT/tmp/priv/vtgate.pid \
  -lower_case_table_names=true \
  -enable_offload_engines=false \
  -mysql_allow_clear_text_without_tls=true \
  -mysql_auth_server_impl $server_impl\
  -kundb_ldap_disable_tls=true \
  -kundb_ldap_tls_skip_verify_host=true \
  -kundb_auth_plugin $auth_plugin\
  -grpc_cert $KUNDB_CONF_DIR/vtgate-server-instance-cert.pem \
  -grpc_key $KUNDB_CONF_DIR/vtgate-server-instance-key.pem \
  -skip_peak_log=false \
  $optional_args \
  $optional_tls_args \
  > $VTDATAROOT/tmp/priv/vtgate.out 2>&1 &

echo "Access vtgate at http://$tablet_hostname:$web_port/debug/status"

echo "------start monitor kungate-----"
cd $KUNHOME && ./monitor_kungate.sh priv > $VTDATAROOT/tmp/priv/monitor_vtgate.out 2>&1 &

echo "---------------mfed-up end-----------"

wait
