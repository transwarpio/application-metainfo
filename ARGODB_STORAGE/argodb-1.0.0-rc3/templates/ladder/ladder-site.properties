#
# The Ladder Open Foundation licenses this work under the Apache License, version 2.0
# (the "License"). You may not use this work except in compliance with the License, which is
# available at www.apache.org/licenses/LICENSE-2.0
#
# This software is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied, as more fully set forth in the License.
#
# See the NOTICE file distributed with this work for information regarding copyright ownership.
#

# Site specific configuration properties for Ladder
# Details about all configuration properties http://www.ladder.org/documentation/en/Configuration-Settings.html

# Common properties
ladder.master.hostname=${service.roles.LADDER_MASTER[0]['hostname']}
ladder.underfs.address=${service['ladder.master.localfs.data_path']}
<#if service['ladder.master.journal.data_path']??>
ladder.master.journal.folder=${service['ladder.master.journal.data_path']}
</#if>
<#-- ladder.master.port=${service['ladder.master.port']} -->
ladder.master.web.port=${service['ladder.master.web.port']}
#ladder.security.authentication.type=NOSASL
#ladder.master.journal.type=NOOP
#ladder.user.file.copyfromlocal.write.location.policy.class=io.transwarp.ladder.client.file.policy.LocalFirstPolicy

# Security properties
# ladder.security.authorization.permission.enabled=true
# ladder.security.authentication.type=SIMPLE

# Worker properties
ladder.worker.memory.size=${service['ladder.worker.mem.size']}
ladder.worker.tieredstore.levels=2
ladder.worker.tieredstore.level0.alias=MEM
ladder.worker.tieredstore.level0.dirs.path=${service['ladder.worker.mem.data_path']}
ladder.worker.tieredstore.level0.watermark.high.ratio=0.9
ladder.worker.tieredstore.level0.watermark.low.ratio=0.7
ladder.worker.tieredstore.level1.alias=HDD
ladder.worker.tieredstore.level1.dirs.path=${service['ladder.worker.hdd.data_path']}
ladder.worker.tieredstore.level1.dirs.quota=${service['ladder.worker.tieredstore.level1.dirs.quota']}
ladder.worker.tieredstore.level1.watermark.high.ratio=0.9
ladder.worker.tieredstore.level1.watermark.low.ratio=0.7
#ladder.worker.allocator.class=alluxio.worker.block.allocator.MaxFreeAllocator
#ladder.worker.evictor.class=alluxio.worker.block.evictor.LRUEvictor
ladder.worker.tieredstore.reserver.enabled=true
<#-- ladder.worker.port=${service['ladder.worker.port']} -->
<#-- ladder.worker.data.port=${service['ladder.worker.data.port']} -->
ladder.worker.web.port=${service['ladder.worker.web.port']}


# User properties
# ladder.user.file.readtype.default=CACHE_PROMOTE
# ladder.user.file.writetype.default=MUST_CACHE
