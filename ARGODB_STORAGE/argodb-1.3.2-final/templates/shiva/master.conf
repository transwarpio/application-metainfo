<#list service.roles["SHIVA_MASTER"] as r>
    <#if r.id == .data_model['role.id']>
      <#assign localip=r.ip>
    </#if>
</#list>

[log]
log_dir=${service['shiva.master.log.log_dir']}
log_min_log_level=${service['shiva.master.log.log_min_log_level']}
log_v_level=${service['shiva.master.log.log_v_level']}
log_retain_size_gb=${service['shiva.master.log.log_retain_size_gb']}

[master]
data_path=${service['shiva.master.master.data_path']}
master_ip=${localip}

[rpc_service]
master_service_port=${service['shiva.master.rpc_service.master_service_port']}
master_service_thread_num=${service['shiva.master.rpc_service.master_service_thread_num']}
monitor_service_thread_num=${service['shiva.master.rpc_service.monitor_service_thread_num']}
raft_service_thread_num=${service['shiva.master.rpc_service.raft_service_thread_num']}
recover_service_thread_num=${service['shiva.master.rpc_service.recover_service_thread_num']}

[rpc_client]
rpc_work_thread_num=${service['shiva.master.rpc_client.rpc_work_thread_num']}
rpc_callback_thread_num=${service['shiva.master.rpc_client.rpc_callback_thread_num']}
rpc_timeout_ms=${service['shiva.master.rpc_client.rpc_timeout_ms']}

[recover]
recover_rpc_call_timeout_ms=${service['shiva.master.recover.recover_rpc_call_timeout_ms']}
recover_data_buffer_size_mb=${service['shiva.master.recover.recover_data_buffer_size_mb']}
recover_data_max_concurrent=${service['shiva.master.recover.recover_data_max_concurrent']}

[raft]
heartbeat_period_ms=${service['shiva.master.raft.heartbeat_period_ms']}
max_batch_size_b=${service['shiva.master.raft.max_batch_size_b']}
election_threshold=${service['shiva.master.raft.election_threshold']}
disruption_threshold=${service['shiva.master.raft.disruption_threshold']}
max_replicate_buffer_size_mb=${service['shiva.master.raft.max_replicate_buffer_size_mb']}

[scheduler]
get_server_statistic_period_s=${service['shiva.master.scheduler.get_server_statistic_period_s']}
get_all_tablets_period_s=${service['shiva.master.scheduler.get_all_tablets_period_s']}
dead_server_timeout_s=${service['shiva.master.scheduler.dead_server_timeout_s']}
bulk_gc_period_s=${service['shiva.master.scheduler.bulk_gc_period_s']}
bulk_lease_timeout_s=${service['shiva.master.scheduler.bulk_lease_timeout_s']}
clean_trash_period_s=${service['shiva.master.scheduler.clean_trash_period_s']}
keep_trash_time_s=${service['shiva.master.scheduler.keep_trash_time_s']}
