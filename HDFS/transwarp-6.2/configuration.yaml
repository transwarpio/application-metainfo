###needed context:
# sid        service identifier
# memBytes   total size of physical memory in Bytes
# rcmdMounts array of sorted recommended mounts (array of string)
#             e.g. rcmdMounts = ["/mnt/disk1","/mnt/disk2","/mnt/disk3"]
# disks      array of all mounts, each mount has fields "fs", "mountPoint", "size"
#             e.g. disks = [
#                     {"fs":"/dev/mapper/centos-root", "mountPoint":"/", "size":53660876800},
#                     {"fs":"tmpfs", "mountPoint":"/dev/shm", "size":8363089920},
#                     {"fs":"/dev/sdc1", "mountPoint":"/mnt/disk1", "size":1968872734720},
#                     {"fs":"/dev/sdd1", "mountPoint":"/mnt/disk2", "size":1968872734720},
#                     {"fs":"/dev/sdd1", "mountPoint":"/mnt/disk3", "size":492123668480},
#                     {"fs":"/dev/sdb1", "mountPoint":"/var/log", "size":21136797696}
#                   ]

- name: dfs.datanode.data.dir
  recommendExpression: |
    <#function localDir suffix>
      <#if rcmdMounts?size == 0>
        <#return suffix>
      <#else>
        <#local dirs = []>
        <#list rcmdMounts?sort as mnt>
         <#local dirs = dirs + [mnt + suffix]>
        </#list>
        <#return dirs?join(",")>
      </#if>
    </#function>
    ${localDir("/hadoop/data")}
  defaultValue: file://${hadoop.tmp.dir}/dfs/data
  valueType: COMMA_SEPARATED_ABSOLUTE_PATH
  isNodeSpecific: true  # TODO work around before WARP-11503
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups:
  - "hdfs-site.xml"
  visibility: READ_WRITE
- name: dfs.datanode.failed.volumes.tolerated
  recommendExpression: ${(rcmdMounts?size / 3)?int}
  defaultValue: 0
  valueType: NON_NEG_INT
  isNodeSpecific: true
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups:
  - "hdfs-site.xml"
  visibility: READ_WRITE
- name: dfs.namenode.name.dir
  recommendExpression: |
    <#assign sorted = rcmdMounts?sort>
    <#if sorted?size == 0>
    /hadoop/hadoop_image,/hadoop/namenode_dir
    <#elseif sorted?size == 1>
    /hadoop/namenode_dir,${sorted?first}/hadoop/namenode_dir
    <#else>
    ${sorted[0]}/hadoop/namenode_dir,${sorted[1]}/hadoop/namenode_dir
    </#if>
  defaultValue: file://${hadoop.tmp.dir}/dfs/name
  valueType: COMMA_SEPARATED_ABSOLUTE_PATH
  isNodeSpecific: true # TODO work around before WARP-11503
  scope: !<RoleTypes>
      roleTypes:
      - HDFS_NAMENODE
  onDeps: []
  groups:
  - "hdfs-site.xml"
  visibility: READ_WRITE

- name: ha.zookeeper.parent-znode
  recommendExpression: /${service.sid}-ha
  defaultValue: null
  valueType: ABSOLUTE_PATH
  scope: !<ServiceLevel> {}
  onDeps: []
  groups:
  - "core-site.xml"
  visibility: "READ_WRITE"
- name: dfs.datanode.du.reserved
  recommendExpression: |
    <#compress>
    <#function diskSizeByMnt mnt>
      <#list disks?reverse as disk>
        <#if mnt?contains(disk.mountPoint)>
         <#return disk.size>
        </#if>
      </#list>
      <#return 0>
    </#function>
    <#assign reserved=10737418240>
    <#list rcmdMounts as mnt>
     <#assign curRsv = diskSizeByMnt(mnt) / 5>
     <#if curRsv gt reserved>
      <#assign reserved=curRsv>
     </#if>
    </#list>
    ${reserved?floor?c}
    </#compress>
  defaultValue: 0
  valueType: BYTES
  isNodeSpecific: true
  scope: !<RoleTypes>
       roleTypes:
       - HDFS_DATANODE
  onDeps: []
  groups:
  - "hdfs-site.xml"
  visibility: READ_WRITE

- name: namenode.rpc-port
  recommendExpression: 8020
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_NAMENODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.namenode.handler.count
  recommendExpression: 100
  defaultValue: 10
  valueType: NON_NEG_INT
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: namenode.http-port
  recommendExpression: 50070
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_NAMENODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.use.wildcard
  recommendExpression: false
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.use.wildcard
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.rpc-port
  recommendExpression: 8485
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_JOURNALNODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.http-port
  recommendExpression: 8480
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_JOURNALNODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.use.wildcard
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.ipc-port
  recommendExpression: 50020
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.port
  recommendExpression: 50010
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.datanode.handler.count
  recommendExpression: 30
  defaultValue: 10
  valueType: NON_NEG_INT
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: datanode.http-port
  recommendExpression: 50075
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.ipc-port
  recommendExpression: 50020
  defaultValue: null
  valueType: PORT
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: default.heap.size
  recommendExpression: 4096
  defaultValue: null
  valueType: MB
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.ha.fencing.methods
  recommendExpression: shell(/bin/true)
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: dfs.datanode.data.dir.perm
  recommendExpression: 755
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: dfs.permissions.superusergroup
  recommendExpression: "hbase"
  defaultValue: "supergroup"
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: dfs.namenode.acls.enabled
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: fs.trash.interval
  recommendExpression: 1440
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: namenode.memory
  recommendExpression: |
    <#compress>
    <#assign halfMemMB = (memBytes/1048576/2)?int>
    <#if halfMemMB <= 24000>
      ${halfMemMB?c}
    <#else>
      24000
    </#if>
    </#compress>
  defaultValue: null
  valueType: MB
  isNodeSpecific: true
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_NAMENODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.memory
  recommendExpression: 1024
  defaultValue: null
  valueType: MB
  isNodeSpecific: true
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_NAMENODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.memory
  recommendExpression: 4096
  defaultValue: null
  valueType: MB
  isNodeSpecific: true
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_JOURNALNODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.memory
  recommendExpression: 8192
  defaultValue: null
  valueType: MB
  isNodeSpecific: true
  scope: !<RoleTypes>
    roleTypes:
    - HDFS_DATANODE
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.container.limits.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.container.limits.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.container.requests.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.container.requests.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: namenode.memory.ratio
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.container.limits.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.container.limits.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.container.requests.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.container.requests.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: zkfc.memory.ratio
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_NAMENODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.container.limits.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_JOURNALNODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.container.limits.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_JOURNALNODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.container.requests.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_JOURNALNODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.container.requests.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_JOURNALNODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: journalnode.memory.ratio
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_JOURNALNODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.container.limits.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_DATANODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.container.limits.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_DATANODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.container.requests.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_DATANODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.container.requests.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_DATANODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: datanode.memory.ratio
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_DATANODE]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: httpfs.container.limits.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: httpfs.container.limits.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: httpfs.container.requests.memory
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: httpfs.container.requests.cpu
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: httpfs.memory.ratio
  recommendExpression: -1
  defaultValue: null
  valueType: FLOAT
  scope: !<RoleTypes>
    roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.httpfs.cas.enabled
  recommendExpression: false
  defaultValue: null
  valueType: BOOL
  scope: !<RoleTypes>
      roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.httpfs.oauth2.enabled
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<RoleTypes>
      roleTypes: [HDFS_HTTPFS]
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: transwarp.docker.enable
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: transwarp.docker.network.policy
  recommendExpression: io.transwarp.docker.DockerNetworkPolicyHostGW
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: transwarp.docker.network.interfaces
  recommendExpression: eth0
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: transwarp.docker.network.hypervisor-subnetmask
  recommendExpression: 255.255.255.255
  defaultValue: null
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["core-site.xml"]
  visibility: READ_WRITE

- name: hadoop.security.authentication.web.cas.enabled
  recommendExpression: false
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: hadoop.security.authentication.web.oauth2.enabled
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: hadoop.security.authentication.oauth2.enabled
  recommendExpression: true
  defaultValue: null
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: []
  visibility: READ_WRITE

- name: dfs.data.transfer.protection
  recommendExpression: authentication
  defaultValue: "authentication"
  valueType: STRING
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: dfs.client.read.shortcircuit
  recommendExpression: true
  defaultValue: true
  valueType: BOOL
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE

- name: dfs.client.socket-timeout
  recommendExpression: 120000
  defaultValue: 120000
  valueType: NON_NEG_INT
  scope: !<ServiceLevel> {}
  onDeps: []
  groups: ["hdfs-site.xml"]
  visibility: READ_WRITE
