groups:
- name: kubernetes.rules
  rules:
  - expr: sum(container_fs_limit_bytes) BY (instance,node)
    record: machine_storage_bytes
  - expr: sum(container_fs_usage_bytes) BY (instance,node)
    record: kubelet:node:storage:used
  - expr: kubelet:node:storage:used / machine_storage_bytes * 100
    record: kubelet:node:storage:usage
  - expr: sum(warpdrive_volume_used_space_bytes) BY (namespace)
    record: kubelet:namespace:storage:used
  - expr: sum(rate(container_cpu_usage_seconds_total{id="/"}[2m])) BY (instance,node)
    record: kubelet:node:cpu:used
  - expr: kubelet:node:cpu:used / sum(machine_cpu_cores) BY (instance,node) * 100
    record: kubelet:node:cpu:usage
  - expr: sum(container_memory_working_set_bytes{id="/"}) BY (instance,node)
    record: kubelet:node:mem:used
  - expr: kubelet:node:mem:used / sum(machine_memory_bytes) BY (instance,node) * 100
    record: kubelet:node:mem:usage
  - expr: sum(rate(container_cpu_usage_seconds_total[2m])) BY (namespace) / (1 + scalar(sum(machine_cpu_cores)))
      * 100
    record: kubelet:namespace:cpu:usage
  - expr: sum(rate(container_cpu_usage_seconds_total[2m])) BY (namespace)
    record: kubelet:namespace:cpu:used
  - expr: sum(rate(container_cpu_usage_seconds_total[2m]))
    record: kubelet:namespace:cpu:used:total
  - expr: sum(kube_pod_container_resource_requests_cpu_cores) BY (namespace)
    record: kubelet:namespace:cpu:request
  - expr: sum(kube_pod_container_resource_requests_cpu_cores)
    record: kubelet:namespace:cpu:request:total
  - expr: sum(container_memory_working_set_bytes) BY (namespace) / (1 + scalar(sum(machine_memory_bytes)))
      * 100
    record: kubelet:namespace:mem:usage
  - expr: sum(container_memory_working_set_bytes) BY (namespace)
    record: kubelet:namespace:mem:used
  - expr: sum(container_memory_working_set_bytes)
    record: kubelet:namespace:mem:used:total
  - expr: sum(kube_pod_container_resource_requests_memory_bytes) BY (namespace)
    record: kubelet:namespace:mem:request
  - expr: sum(kube_pod_container_resource_requests_memory_bytes)
    record: kubelet:namespace:mem:request:total
  - expr: sum(rate(container_network_receive_bytes_total[2m])) BY (namespace)
    record: kubelet:namespace:network_received:used
  - expr: -sum(rate(container_network_transmit_bytes_total[2m])) BY (namespace)
    record: kubelet:namespace:network_sent:used
  - expr: sum(rate(container_cpu_usage_seconds_total[2m])) BY (pod_name, namespace,
      instance)
    record: kubelet:pod:cpu:used
  - expr: sum(container_memory_working_set_bytes) BY (pod_name, namespace, instance)
    record: kubelet:pod:mem:used
  - expr: sum(rate(container_network_receive_bytes_total[2m])) BY (pod_name, namespace,
      instance)
    record: kubelet:pod:network:received:used
  - expr: -sum(rate(container_network_transmit_bytes_total[2m])) BY (pod_name, namespace,
      instance)
    record: kubelet:pod:network:sent:used
  - expr: rate(kubelet_node_status_update_latency_microseconds_count[2m])
    record: kubelet:node:update_latency_count:rate
  - expr: container_fs_usage_bytes{id="/"} / container_fs_limit_bytes{id="/"} * 100
    record: kubelet:node:filesystem:usage
  - expr: sum(rate(container_cpu_usage_seconds_total[2m])) BY (container_name, pod_name,
      namespace, instance)
    record: kubelet:k8s_container:cpu:used
  - expr: sum(kube_pod_container_resource_requests_cpu_cores) BY (container, pod,
      namespace, instance)
    record: kubelet:k8s_container:cpu:request
  - expr: sum(rate(container_cpu_usage_seconds_total{id!="/",name!="",namespace=""}[2m]))
      BY (name)
    record: kubelet:docker_container:cpu:used
  - expr: sum(container_memory_working_set_bytes) BY (namespace, pod_name, container_name,
      instance)
    record: kubelet:k8s_container:mem:used
  - expr: sum(kube_pod_container_resource_requests_memory_bytes) BY (namespace, pod,
      container, instance)
    record: kubelet:k8s_container:mem:request
  - expr: sum(container_memory_working_set_bytes{container_name!="",container_name!="POD"})
      BY (namespace, pod_name, container_name, instance) / sum(container_spec_memory_limit_bytes)
      BY (namespace, pod_name, container_name, instance) * 100
    record: kubelet:k8s_container:mem:usage
  - expr: sum(container_memory_working_set_bytes{id!="/",name!="",namespace=""}) BY
      (name)
    record: kubelet:docker_container:mem:used
  - expr: sum(rate(container_network_receive_bytes_total[2m])) BY (container_name,
      pod_name, namespace, instance)
    record: kubelet:k8s_container:network_received:used
  - expr: sum(rate(container_network_transmit_bytes_total[2m])) BY (container_name,
      pod_name, namespace, instance)
    record: kubelet:k8s_container:network_sent:used
  - expr: sum(rate(container_network_receive_bytes_total{id!="/",name!="",namespace=""}[2m]))
      BY (name)
    record: kubelet:docker_container:network_received:used
  - expr: sum(rate(container_network_transmit_bytes_total{id!="/",name!="",namespace=""}[2m]))
      BY (name)
    record: kubelet:docker_container:network_sent:used
  - expr: sum(rate(container_cpu_usage_seconds_total[2m])) BY (container_name, pod_name,
      namespace, instance)
    record: kubelet:container:cpu_usage
  - expr: sum(container_memory_working_set_bytes) BY (container_name, pod_name, namespace,
      instance)
    record: kubelet:container:mem_usage
  - expr: sum(rate(apiserver_request_count[2m])) BY (instance)
    record: apiserver:request_count:rate
  - expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{verb!~"^(?:CONNECT|WATCHLIST|WATCH)$"}[10m]))
      WITHOUT (instance, node, resource)) / 1e+06
    labels:
      quantile: "0.99"
    record: apiserver:latency_histogram_quantile
  - expr: histogram_quantile(0.9, sum(rate(apiserver_request_latencies_bucket{verb!~"^(?:CONNECT|WATCHLIST|WATCH)$"}[10m]))
      WITHOUT (instance, node, resource)) / 1e+06
    labels:
      quantile: "0.9"
    record: apiserver:latency_histogram_quantile
  - expr: histogram_quantile(0.5, sum(rate(apiserver_request_latencies_bucket{verb!~"^(?:CONNECT|WATCHLIST|WATCH)$"}[10m]))
      WITHOUT (instance, node, resource)) / 1e+06
    labels:
      quantile: "0.5"
    record: apiserver:latency_histogram_quantile
  - expr: etcd_request_cache_add_latencies_summary{quantile="0.99"} / 1e+06
    labels:
      quantile: "0.99"
    record: apiserver:etcd_access_latency
  - expr: etcd_request_cache_add_latencies_summary{quantile="0.9"} / 1e+06
    labels:
      quantile: "0.9"
    record: apiserver:etcd_access_latency
  - expr: etcd_request_cache_add_latencies_summary{quantile="0.5"} / 1e+06
    labels:
      quantile: "0.5"
    record: apiserver:etcd_access_latency
  - expr: 100 * (1 - avg by(instance, job) (irate(node_cpu_seconds_total{mode="idle"}[2m])))
    record: node_exporter:node_cpu_use:percent
  - expr: sum BY (instance, job) (rate(node_cpu_seconds_total[1m]))- sum BY (instance,
      job) (rate(node_cpu_seconds_total{mode="idle"}[1m]))
    record: node_exporter:node_cpu_used
  - expr: 100 * avg(irate(node_cpu_seconds_total[1m])) BY (instance, mode)
    record: node_exporter:node_cpu_mode_use:percent
  - expr: 100 * (1 - (node_memory_MemFree_bytes + node_memory_Cached_bytes + node_memory_Buffers_bytes)
      / (node_memory_MemTotal_bytes))
    record: node_exporter:node_mem_use:percent
  - expr: node_memory_MemTotal_bytes - (node_memory_MemFree_bytes + node_memory_Cached_bytes
      + node_memory_Buffers_bytes)
    record: node_exporter:node_mem_used
  - expr: 100  * (sum BY (instance, job) (node_filesystem_size_bytes{device!="rootfs|selinuxfs|autofs|rpc_pipefs|tmpfs|udev|none|devpts|sysfs|debugfs|fuse.*"})
      - sum BY (instance, job) (node_filesystem_free_bytes{device!="rootfs|selinuxfs|autofs|rpc_pipefs|tmpfs|udev|none|devpts|sysfs|debugfs|fuse.*"}))
      / sum BY (instance, job) (node_filesystem_size_bytes{device!="rootfs|selinuxfs|autofs|rpc_pipefs|tmpfs|udev|none|devpts|sysfs|debugfs|fuse.*"})
    record: node_exporter:node_disk_use:percent
  - expr: 100 * (node_memory_SwapTotal_bytes - node_memory_SwapFree_bytes) / node_memory_SwapTotal_bytes
    record: node_exporter:node_swapmem_use:percent
  - expr: sum by(namespace, node, pod_name) (rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
      / sum by(namespace, node, pod_name) (label_replace(kube_pod_container_resource_requests_cpu_cores,
      "pod_name", "$1", "pod",  "(.*)"))
    record: namespace:node:pod:cpu:used:requests
  - expr: sum by(namespace, node, pod_name) (container_memory_usage_bytes{container_name!="POD",pod_name!=""})
      / sum by(namespace, node, pod_name) (label_replace(kube_pod_container_resource_requests_memory_bytes,
      "pod_name", "$1", "pod",  "(.*)"))
    record: namespace:node:pod:mem:used:requests
  - expr: irate(node_disk_io_time_seconds_total[2m]) * 10
    record: node_exporter:node_disk_util:percent
  - expr: irate(node_disk_read_bytes_total[2m])
    record: node_exporter:node_disk_read_bytes
  - expr: irate(node_disk_written_bytes_total[2m])
    record: node_exporter:node_disk_bytes_write
  - expr: irate(node_disk_reads_completed_total[2m])
    record: node_exporter:node_disk_iops_read
  - expr: irate(node_disk_writes_completed_total[2m])
    record: node_exporter:node_disk_iops_write
  - expr: irate(node_context_switches_total[2m])
    record: node_exporter:node_disk_context_switches
  - expr: irate(node_network_receive_bytes_total[2m])
    record: node_exporter:node_network_receive_bytes
  - expr: irate(node_network_transmit_bytes_total[2m])
    record: node_exporter:node_network_transmit_bytes
  - expr: node_disk_reads_completed_total + node_disk_writes_completed_total
    record: node_exporter:disk_io_completed
  - expr: rate(node_disk_io_time_seconds_total[2m]) / rate(node_exporter:disk_io_completed[2m])
    record: node_exporter:disk_await
  - expr: rate(node_disk_read_time_seconds_total[2m]) / rate(node_disk_reads_completed_total[2m])
    record: node_exporter:disk_rwait
  - expr: rate(node_disk_write_time_seconds_total[2m]) / rate(node_disk_writes_completed_total[2m])
    record: node_exporter:disk_wwait
  - expr: kubelet_running_pod_count / 2
    record: kubestate:pod:running_count:percent
  - expr: rate(warpdrive_api_post_v1_volumes_mount_spend_time_ns[2m]) / rate(warpdrive_api_post_v1_volumes_mount_count[2m])
    record: warpdrive:volume_mount_spent_time
  - expr: rate(warpdrive_api_post_v1_volumes_mount_nonblock_spend_time_ns[2m]) / rate(warpdrive_api_post_v1_volumes_mount_count[2m])
    record: warpdrive:volume_mount_nonblock_spent_time
  - expr: rate(warpdrive_api_post_v1_volumes_umount_spend_time_ns[2m]) / rate(warpdrive_api_post_v1_volumes_umount_count[2m])
    record: warpdrive:volume_umount_spent_time
  - expr: rate(warpdrive_api_post_v1_volumes_umount_nonblock_spend_time_ns[2m]) /
      rate(warpdrive_api_post_v1_volumes_umount_count[2m])
    record: warpdrive:volume_umount_nonblock_spent_time
  - expr: rate(warpdrive_api_post_v1_volumes_create_spend_time_ns[2m]) / rate(warpdrive_api_post_v1_volumes_create_count[2m])
    record: warpdrive:volume_create_spent_time
  - expr: rate(warpdrive_api_post_v1_volumes_create_nonblock_spend_time_ns[2m]) /
      rate(warpdrive_api_post_v1_volumes_create_count[2m])
    record: warpdrive:volume_create_nonblock_spent_time
  - expr: rate(warpdrive_api_delete_v1_volumes_spend_time_ns[2m]) / rate(warpdrive_api_delete_v1_volumes_count[2m])
    record: warpdrive:volume_delete_spent_time
  - expr: rate(warpdrive_api_delete_v1_volumes_nonblock_spend_time_ns[2m]) / rate(warpdrive_api_delete_v1_volumes_count[2m])
    record: warpdrive:volume_delete_nonblock_spent_time
  - expr: sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
      (pod_name)
    record: pod_name:container_memory_usage_bytes:sum
  - expr: sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) BY (pod_name)
    record: pod_name:container_spec_cpu_shares:sum
  - expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
      BY (pod_name)
    record: pod_name:container_cpu_usage:sum
  - expr: sum(container_fs_usage_bytes{container_name!="POD",pod_name!=""}) BY (pod_name)
    record: pod_name:container_fs_usage_bytes:sum
  - expr: sum(container_memory_usage_bytes{container_name!=""}) BY (namespace)
    record: namespace:container_memory_usage_bytes:sum
  - expr: sum(container_spec_cpu_shares{container_name!=""}) BY (namespace)
    record: namespace:container_spec_cpu_shares:sum
  - expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD"}[5m]))
      BY (namespace)
    record: namespace:container_cpu_usage:sum
  - expr: sum(container_memory_usage_bytes{container_name!="POD",pod_name!=""}) BY
      (cluster) / sum(machine_memory_bytes) BY (cluster)
    record: cluster:memory_usage:ratio
  - expr: sum(container_spec_cpu_shares{container_name!="POD",pod_name!=""}) / 1000
      / sum(machine_cpu_cores)
    record: cluster:container_spec_cpu_shares:ratio
  - expr: sum(rate(container_cpu_usage_seconds_total{container_name!="POD",pod_name!=""}[5m]))
      / sum(machine_cpu_cores)
    record: cluster:container_cpu_usage:ratio
  - expr: histogram_quantile(0.99, rate(apiserver_request_latencies_bucket[5m])) /
      1e+06
    labels:
      quantile: "0.99"
    record: apiserver_latency_seconds:quantile
  - expr: histogram_quantile(0.9, rate(apiserver_request_latencies_bucket[5m])) /
      1e+06
    labels:
      quantile: "0.9"
    record: apiserver_latency:quantile_seconds
  - expr: histogram_quantile(0.5, rate(apiserver_request_latencies_bucket[5m])) /
      1e+06
    labels:
      quantile: "0.5"
    record: apiserver_latency_seconds:quantile

- name: k8s.rules
  rules:
  - expr: sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m]))
      by (namespace)
    record: namespace:container_cpu_usage_seconds_total:sum_rate
  - expr: |-
      sum by (namespace, pod_name, container_name) (
        rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])
      )
    record: namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate
  - expr: sum(container_memory_usage_bytes{job="kubelet", image!="", container_name!=""})
      by (namespace)
    record: namespace:container_memory_usage_bytes:sum
  - expr: |-
      sum by (namespace, label_name) (
         sum(rate(container_cpu_usage_seconds_total{job="kubelet", image!="", container_name!=""}[5m])) by (namespace, pod_name)
       * on (namespace, pod_name) group_left(label_name)
         label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
      )
    record: namespace_name:container_cpu_usage_seconds_total:sum_rate
  - expr: |-
      sum by (namespace, label_name) (
        sum(container_memory_usage_bytes{job="kubelet",image!="", container_name!=""}) by (pod_name, namespace)
      * on (namespace, pod_name) group_left(label_name)
        label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
      )
    record: namespace_name:container_memory_usage_bytes:sum
  - expr: |-
      sum by (namespace, label_name) (
        sum(kube_pod_container_resource_requests_memory_bytes{job="kube-state-metrics"} * on (endpoint, instance, job, namespace, pod, service) group_left(phase) (kube_pod_status_phase{phase=~"^(Pending|Running)$"} == 1)) by (namespace, pod)
      * on (namespace, pod) group_left(label_name)
        label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
      )
    record: namespace_name:kube_pod_container_resource_requests_memory_bytes:sum
  - expr: |-
      sum by (namespace, label_name) (
        sum(kube_pod_container_resource_requests_cpu_cores{job="kube-state-metrics"} * on (endpoint, instance, job, namespace, pod, service) group_left(phase) (kube_pod_status_phase{phase=~"^(Pending|Running)$"} == 1)) by (namespace, pod)
      * on (namespace, pod) group_left(label_name)
        label_replace(kube_pod_labels{job="kube-state-metrics"}, "pod_name", "$1", "pod", "(.*)")
      )
    record: namespace_name:kube_pod_container_resource_requests_cpu_cores:sum
  - expr: |-
      sum(
        label_replace(
          label_replace(
            kube_pod_owner{job="kube-state-metrics", owner_kind="ReplicaSet"},
            "replicaset", "$1", "owner_name", "(.*)"
          ) * on(replicaset, namespace) group_left(owner_name) kube_replicaset_owner{job="kube-state-metrics"},
          "workload", "$1", "owner_name", "(.*)"
        )
      ) by (namespace, workload, pod)
    labels:
      workload_type: deployment
    record: mixin_pod_workload
  - expr: |-
      sum(
        label_replace(
          kube_pod_owner{job="kube-state-metrics", owner_kind="DaemonSet"},
          "workload", "$1", "owner_name", "(.*)"
        )
      ) by (namespace, workload, pod)
    labels:
      workload_type: daemonset
    record: mixin_pod_workload
  - expr: |-
      sum(
        label_replace(
          kube_pod_owner{job="kube-state-metrics", owner_kind="StatefulSet"},
          "workload", "$1", "owner_name", "(.*)"
        )
      ) by (namespace, workload, pod)
    labels:
      workload_type: statefulset
    record: mixin_pod_workload

- name: kube-apiserver.rules
  rules:
  - expr: histogram_quantile(0.99, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.99"
    record: cluster_quantile:apiserver_request_latencies:histogram_quantile
  - expr: histogram_quantile(0.9, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.9"
    record: cluster_quantile:apiserver_request_latencies:histogram_quantile
  - expr: histogram_quantile(0.5, sum(rate(apiserver_request_latencies_bucket{job="apiserver"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.5"
    record: cluster_quantile:apiserver_request_latencies:histogram_quantile

- name: kube-prometheus-node-recording.rules
  rules:
  - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[3m])) BY (instance)
    record: instance:node_cpu:rate:sum
  - expr: sum((node_filesystem_size_bytes{mountpoint="/"} - node_filesystem_free_bytes{mountpoint="/"}))
      BY (instance)
    record: instance:node_filesystem_usage:sum
  - expr: sum(rate(node_network_receive_bytes_total[3m])) BY (instance)
    record: instance:node_network_receive_bytes:rate:sum
  - expr: sum(rate(node_network_transmit_bytes_total[3m])) BY (instance)
    record: instance:node_network_transmit_bytes:rate:sum
  - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m])) WITHOUT
      (cpu, mode) / ON(instance) GROUP_LEFT() count(sum(node_cpu_seconds_total) BY
      (instance, cpu)) BY (instance)
    record: instance:node_cpu:ratio
  - expr: sum(rate(node_cpu_seconds_total{mode!="idle",mode!="iowait"}[5m]))
    record: cluster:node_cpu:sum_rate5m
  - expr: cluster:node_cpu_seconds_total:rate5m / count(sum(node_cpu_seconds_total)
      BY (instance, cpu))
    record: cluster:node_cpu:ratio

- name: kube-scheduler.rules
  rules:
  - expr: histogram_quantile(0.99, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.99"
    record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
  - expr: histogram_quantile(0.99, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.99"
    record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
  - expr: histogram_quantile(0.99, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.99"
    record: cluster_quantile:scheduler_binding_latency:histogram_quantile
  - expr: histogram_quantile(0.9, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.9"
    record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
  - expr: histogram_quantile(0.9, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.9"
    record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
  - expr: histogram_quantile(0.9, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.9"
    record: cluster_quantile:scheduler_binding_latency:histogram_quantile
  - expr: histogram_quantile(0.5, sum(rate(scheduler_e2e_scheduling_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.5"
    record: cluster_quantile:scheduler_e2e_scheduling_latency:histogram_quantile
  - expr: histogram_quantile(0.5, sum(rate(scheduler_scheduling_algorithm_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.5"
    record: cluster_quantile:scheduler_scheduling_algorithm_latency:histogram_quantile
  - expr: histogram_quantile(0.5, sum(rate(scheduler_binding_latency_microseconds_bucket{job="kube-scheduler"}[5m]))
      without(instance, pod)) / 1e+06
    labels:
      quantile: "0.5"
    record: cluster_quantile:scheduler_binding_latency:histogram_quantile

- name: node.rules
  rules:
  - expr: sum(min(kube_pod_info) by (node))
    record: ':kube_pod_info_node_count:'
  - expr: max(label_replace(kube_pod_info{job="kube-state-metrics"}, "pod", "$1",
      "pod", "(.*)")) by (node, namespace, pod)
    record: 'node_namespace_pod:kube_pod_info:'
  - expr: |-
      count by (node) (sum by (node, cpu) (
        node_cpu_seconds_total{job="node-exporter"}
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      ))
    record: node:node_num_cpu:sum
  - expr: 1 - avg(rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m]))
    record: :node_cpu_utilisation:avg1m
  - expr: |-
      1 - avg by (node) (
        rate(node_cpu_seconds_total{job="node-exporter",mode="idle"}[1m])
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:)
    record: node:node_cpu_utilisation:avg1m
  - expr: |-
      node:node_cpu_utilisation:avg1m
        *
      node:node_num_cpu:sum
        /
      scalar(sum(node:node_num_cpu:sum))
    record: node:cluster_cpu_utilisation:ratio
  - expr: |-
      sum(node_load1{job="node-exporter"})
      /
      sum(node:node_num_cpu:sum)
    record: ':node_cpu_saturation_load1:'
  - expr: |-
      sum by (node) (
        node_load1{job="node-exporter"}
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
      /
      node:node_num_cpu:sum
    record: 'node:node_cpu_saturation_load1:'
  - expr: |-
      1 -
      sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
      /
      sum(node_memory_MemTotal_bytes{job="node-exporter"})
    record: ':node_memory_utilisation:'
  - expr: sum(node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"}
      + node_memory_Buffers_bytes{job="node-exporter"})
    record: :node_memory_MemFreeCachedBuffers_bytes:sum
  - expr: sum(node_memory_MemTotal_bytes{job="node-exporter"})
    record: :node_memory_MemTotal_bytes:sum
  - expr: |-
      sum by (node) (
        (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
      )
    record: node:node_memory_bytes_available:sum
  - expr: |-
      sum by (node) (
        node_memory_MemTotal_bytes{job="node-exporter"}
        * on (namespace, pod) group_left(node)
          node_namespace_pod:kube_pod_info:
      )
    record: node:node_memory_bytes_total:sum
  - expr: |-
      (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
      /
      node:node_memory_bytes_total:sum
    record: node:node_memory_utilisation:ratio
  - expr: |-
      (node:node_memory_bytes_total:sum - node:node_memory_bytes_available:sum)
      /
      scalar(sum(node:node_memory_bytes_total:sum))
    record: node:cluster_memory_utilisation:ratio
  - expr: |-
      1e3 * sum(
        (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
       + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
      )
    record: :node_memory_swap_io_bytes:sum_rate
  - expr: |-
      1 -
      sum by (node) (
        (node_memory_MemFree_bytes{job="node-exporter"} + node_memory_Cached_bytes{job="node-exporter"} + node_memory_Buffers_bytes{job="node-exporter"})
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
      /
      sum by (node) (
        node_memory_MemTotal_bytes{job="node-exporter"}
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
    record: 'node:node_memory_utilisation:'
  - expr: 1 - (node:node_memory_bytes_available:sum / node:node_memory_bytes_total:sum)
    record: 'node:node_memory_utilisation_2:'
  - expr: |-
      1e3 * sum by (node) (
        (rate(node_vmstat_pgpgin{job="node-exporter"}[1m])
       + rate(node_vmstat_pgpgout{job="node-exporter"}[1m]))
       * on (namespace, pod) group_left(node)
         node_namespace_pod:kube_pod_info:
      )
    record: node:node_memory_swap_io_bytes:sum_rate
  - expr: avg(irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
    record: :node_disk_utilisation:avg_irate
  - expr: |-
      avg by (node) (
        irate(node_disk_io_time_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
    record: node:node_disk_utilisation:avg_irate
  - expr: avg(irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m]))
    record: :node_disk_saturation:avg_irate
  - expr: |-
      avg by (node) (
        irate(node_disk_io_time_weighted_seconds_total{job="node-exporter",device=~"nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+"}[1m])
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
    record: node:node_disk_saturation:avg_irate
  - expr: |-
      max by (instance, namespace, pod, device) ((node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
      - node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
      / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
    record: 'node:node_filesystem_usage:'
  - expr: max by (instance, namespace, pod, device) (node_filesystem_avail_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"}
      / node_filesystem_size_bytes{fstype=~"ext[234]|btrfs|xfs|zfs"})
    record: 'node:node_filesystem_avail:'
  - expr: |-
      sum(irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m])) +
      sum(irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
    record: :node_net_utilisation:sum_irate
  - expr: |-
      sum by (node) (
        (irate(node_network_receive_bytes_total{job="node-exporter",device!~"veth.+"}[1m]) +
        irate(node_network_transmit_bytes_total{job="node-exporter",device!~"veth.+"}[1m]))
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
    record: node:node_net_utilisation:sum_irate
  - expr: |-
      sum(irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m])) +
      sum(irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
    record: :node_net_saturation:sum_irate
  - expr: |-
      sum by (node) (
        (irate(node_network_receive_drop_total{job="node-exporter",device!~"veth.+"}[1m]) +
        irate(node_network_transmit_drop_total{job="node-exporter",device!~"veth.+"}[1m]))
      * on (namespace, pod) group_left(node)
        node_namespace_pod:kube_pod_info:
      )
    record: node:node_net_saturation:sum_irate
  - expr: |-
      max(
        max(
          kube_pod_info{job="kube-state-metrics", host_ip!=""}
        ) by (node, host_ip)
        * on (host_ip) group_right (node)
        label_replace(
          (max(node_filesystem_files{job="node-exporter", mountpoint="/"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
        )
      ) by (node)
    record: 'node:node_inodes_total:'
  - expr: |-
      max(
        max(
          kube_pod_info{job="kube-state-metrics", host_ip!=""}
        ) by (node, host_ip)
        * on (host_ip) group_right (node)
        label_replace(
          (max(node_filesystem_files_free{job="node-exporter", mountpoint="/"}) by (instance)), "host_ip", "$1", "instance", "(.*):.*"
        )
      ) by (node)
    record: 'node:node_inodes_free:'
