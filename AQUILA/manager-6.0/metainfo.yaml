---
name: AQUILA
version: manager-6.0
global: true
namePrefix: Aquila
friendlyName: "Aquila"
dependencies: []
user: root
# TODO need generate manager password

roles:
- name: AQUILA_SERVER
  friendlyName: "Aquila Server"
  labelPrefix: "aquila-server"
  dockerImage: "transwarp/aquila:manager-6.0"
  linkExpression: "http://${localhostname}:${service['server.web.port']}"
  category: MASTER
  frontendOperations: ["Start", "Stop"]
  env:
  - name: SERVER_CONF_DIR
    value: /etc/${service.sid}/conf/server
  - name: SERVER_LOG_DIR
    value: /var/log/${service.sid}/server
  mountPaths:
  - mountPath: /tmp
    hostPath: /tmp
    name: temp
  resources:
    limitsMemoryKey: server.container.limits.memory
    limitsCpuKey: server.container.limits.cpu
    requestsMemoryKey: server.container.requests.memory
    requestsCpuKey: server.container.requests.cpu
  nodeSpecificMounts: []
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq>
      numSeq: [1]
  suggestion:
  - criteria: !<Range> {"min": 1}
  validation:
  - criteria: !<Range> {"min": 1}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
        paths: ["/var/log/${service.sid}/server"]
        mode: "750"
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "server/application.yml.ftl"
        targetPath: "/etc/${service.sid}/conf/server/application.yml"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "server/log4j2.xml.ftl"
        targetPath: "/etc/${service.sid}/conf/server/log4j2.xml"
        mode: "755"

- name: AQUILA_AGENT
  friendlyName: "Aquila Agent"
  labelPrefix: "aquila-agent"
  dockerImage: "transwarp/aquila:manager-6.0"
  category: MASTER
  frontendOperations: ["Start", "Stop"]
  env:
  - name: AGENT_CONF_DIR
    value: /etc/${service.sid}/conf/agent
  - name: AGENT_LOG_DIR
    value: /var/log/${service.sid}/agent
  mountPaths:
  - mountPath: /tmp
    hostPath: /tmp
    name: temp
  resources:
    limitsMemoryKey: agent.container.limits.memory
    limitsCpuKey: agent.container.limits.cpu
    requestsMemoryKey: agent.container.requests.memory
    requestsCpuKey: agent.container.requests.cpu
  nodeSpecificMounts: []
  summaryPolicy: SOME
  autoAssign:
    - advice: !<EachNode> {}
  suggestion:
    - criteria: !<EachNode> {}
  validation:
    - criteria: !<EachNode> {}
  operations:
  - type: Install
    directives:
    - directive: !<mkdirs>
       paths: ["/var/log/${service.sid}/agent"]
       mode: "750"
  - type: Config
    directives:
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "agent/application.yml.ftl"
        targetPath: "/etc/${service.sid}/conf/agent/application.yml"
        mode: "755"
    - directive: !<resource>
        templateType: FreeMarker
        templatePath: "agent/log4j2.xml.ftl"
        targetPath: "/etc/${service.sid}/conf/agent/log4j2.xml"
        mode: "755"

- name: AQUILA_MANAGER_PROXY
  friendlyName: "Manager Proxy"
  labelPrefix: "manager-proxy"
  dockerImage: "transwarp/manager-proxy:manager-6.0"
  category: MASTER
  frontendOperations: ["Start", "Stop"]
  env:
    - name: PROXY_CONF_DIR
      value: /etc/${service.sid}/conf/manager-proxy
    - name: PROXY_LOG_DIR
      value: /var/log/${service.sid}/manager-proxy
  mountPaths:
    - mountPath: /tmp
      hostPath: /tmp
      name: temp
    - mountPath: /var/lib/transwarp-manager/master/content/meta/services
      hostPath: /var/lib/transwarp-manager/master/content/meta/services
      name: metainfo
  resources:
    limitsMemoryKey: manager.proxy.container.limits.memory
    limitsCpuKey: manager.proxy.container.limits.cpu
    requestsMemoryKey: manager.proxy.container.requests.memory
    requestsCpuKey: manager.proxy.container.requests.cpu
  nodeSpecificMounts: []
  summaryPolicy: SOME
  autoAssign:
  - advice: !<NumSeq>
      numSeq: [1]
      mates: ["TRANSWARP_MANAGER_MASTER"] #REGISTRY_SERVER is strictly adhered to Manager
  suggestion:
    - criteria: !<OnManagerNode> {"roleType": "AQUILA_MANAGER_PROXY"}
  validation:
    - criteria: !<OnManagerNode> {"roleType": "AQUILA_MANAGER_PROXY"}
  operations:
    - type: Install
      directives:
        - directive: !<mkdirs>
            paths: ["/var/log/${service.sid}/manager-proxy"]
            mode: "750"
    - type: Config
      directives:
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "manager-proxy/application.yml.ftl"
            targetPath: "/etc/${service.sid}/conf/manager-proxy/application.yml"
            mode: "755"
        - directive: !<resource>
            templateType: FreeMarker
            templatePath: "manager-proxy/log4j2.xml.ftl"
            targetPath: "/etc/${service.sid}/conf/manager-proxy/log4j2.xml"
            mode: "755"

- name: AQUILA_NODE_EXPORTER
  friendlyName: "Node Exporter"
  labelPrefix: "node-exporter"
  dockerImage: "transwarp/node-exporter:manager-6.0"
  linkExpression: "http://${localhostname}:${service['node.exporter.web.port']}"
  category: MASTER
  frontendOperations: ["Start", "Stop"]
  env:
  - name: AQUILA_CONF_DIR
    value: /etc/${service.sid}/conf
  mountPaths:
  - mountPath: /host
    hostPath: /
    name: host-mount
  nodeSpecificMounts: []
  summaryPolicy: SOME
  autoAssign:
  - advice: !<EachNode> {}
  suggestion:
  - criteria: !<EachNode> {}
  validation:
  - criteria: !<Range> {"min": 1}
  operations: []

# MANAGER_PROXY is strictly adhered to Manager

firstWizardConfigs:
- server.web.port
- agent.web.port
- manager.proxy.web.port
- node.exporter.web.port

pages:
- roles
- configuration
- operation

healthChecks:
- category: DAEMON_CHECK
  intervalSeconds: 5
  method: !<K8sPod> {}
